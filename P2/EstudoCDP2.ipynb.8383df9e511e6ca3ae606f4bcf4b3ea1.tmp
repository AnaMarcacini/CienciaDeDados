# Função para identificar outliers inferiores
def find_lower_outliers(data):
    Q1 = np.percentile(data, 25)
    Q3 = np.percentile(data, 75)
    IQR = Q3 - Q1
    lower_bound = Q1 - 1.5 * IQR
    return (data < lower_bound)

# Identificar outliers inferiores para cada grupo de `rad`
df['lower_outlier'] = df.groupby('rad')['medv'].transform(find_lower_outliers)

# Contar o número de outliers inferiores por grupo de `rad`
lower_outliers_count = df.groupby('rad')['lower_outlier'].sum().reset_index()

# Identificar os índices de acessibilidade com o maior número de outliers inferiores
most_lower_outliers_rad = lower_outliers_count.sort_values(by='lower_outlier', ascending=False).head(1)

# Exibir o resultado
most_lower_outliers_rad